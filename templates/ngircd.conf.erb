# $Id$

#
# This is a sample configuration file for the ngIRCd, which must be adepted
# to the local preferences and needs.
#
# Comments are started with "#" or ";".
#
# A lot of configuration options in this file start with a ";". You have
# to remove the ";" in front of each variable to actually set a value!
# The disabled variables are shown with example values for completeness.
#
# Use "ngircd --configtest" (see manual page ngircd(8)) to validate that the
# server interprets the configuration file as expected!
#

[Global]
	# The [Global] section of this file is used to define the main
	# configuration of the server, like the server name and the ports
	# on which the server should be listening.

	# Server name in the IRC network, must contain at least one dot
	# (".") and be unique in the IRC network. Required!
	Name = <%= @servername %>

	# Info text of the server. This will be shown by WHOIS and
	# LINKS requests for example.
	Info = Server Info Text

	# Global password for all users needed to connect to the server
	;Password = abc

	# Information about the server and the administrator, used by the
	# ADMIN command. Not required by server but by RFC!
	;AdminInfo1 = Description
	;AdminInfo2 = Location
	;AdminEMail = admin@irc.server

	# Ports on which the server should listen. There may be more than
	# one port, separated with ",". (Default: 6667)
	Ports = <%= @port %>

	# comma seperated list of IP addresses on which the server should
	# listen. Default values are:
	# "0.0.0.0" or (if compiled with IPv6 support) "::,0.0.0.0"
	# so the server listens on all IP addresses of the system by default.
	Listen = <%= @listenaddress %>

	# Text file with the "message of the day" (MOTD). This message will
	# be shown to all users connecting to the server:
	;MotdFile = /etc/ngircd.motd

	# A simple Phrase (<256 chars) if you don't want to use a motd file.
	# If it is set no MotdFile will be read at all.
	MotdPhrase = "Hello world!"

	# User ID under which the server should run; you can use the name
	# of the user or the numerical ID. ATTENTION: For this to work the
	# server must have been started with root privileges! In addition,
	# the configuration and MOTD files must be readable by this user,
	# otherwise RESTART and REHASH won't work!
	ServerUID = ngircd

	# Group ID under which the ngircd should run; you can use the name
	# of the group or the numerical ID. ATTENTION: For this to work the
	# server must have been started with root privileges!
	ServerGID = ngircd

	# A directory to chroot in when everything is initialized. It
	# doesn't need to be populated if ngIRCd is compiled as a static
	# binary. By default ngIRCd won't use the chroot() feature.
	# ATTENTION: For this to work the server must have been started
	# with root privileges!
	;ChrootDir = /var/empty

	# This tells ngircd to write its current process id to a file.
	# Note that the pidfile is written AFTER chroot and switching uid,
	# i. e. the Directory the pidfile resides in must be writeable by
	# the ngircd user and exist in the chroot directory.
	PidFile = /var/run/ngircd/ngircd.pid

	# After <PingTimeout> seconds of inactivity the server will send a
	# PING to the peer to test whether it is alive or not.
	;PingTimeout = 120

	# If a client fails to answer a PING with a PONG within <PongTimeout>
	# seconds, it will be disconnected by the server.
	;PongTimeout = 20

	# The server tries every <ConnectRetry> seconds to establish a link
	# to not yet (or no longer) connected servers.
	;ConnectRetry = 60

	# Should IRC Operators be allowed to use the MODE command even if
	# they are not(!) channel-operators?
	;OperCanUseMode = no

	# Mask IRC Operator mode requests as if they were coming from the
	# server? (This is a compatibility hack for ircd-irc2 servers)
	;OperServerMode = no

	# Allow Pre-Defined Channels only (see Section [Channels])
	;PredefChannelsOnly = no

	# Don't do any DNS lookups when a client connects to the server.
	;NoDNS = no

	# try to connect to other irc servers using ipv4 and ipv6, if possible
	;ConnectIPv6 = yes
	;ConnectIPv4 = yes

	# Maximum number of simultaneous connection the server is allowed
	# to accept (0: unlimited):
	;MaxConnections = 0

	# Maximum number of simultaneous connections from a single IP address
	# the server will accept (0: unlimited):
	;MaxConnectionsIP = 5

	# Maximum number of channels a user can be member of (0: no limit):
	;MaxJoins = 10

	# Maximum length of an user nick name (Default: 9, as in RFC 2812).
	# Please note that all servers in an IRC network MUST use the same
	# maximum nick name length!
	;MaxNickLength = 9

[Operator]
	# [Operator] sections are used to define IRC Operators. There may be
	# more than one [Operator] block, one for each local operator.

	# ID of the operator (may be different of the nick name)
	;Name = TheOper

	# Password of the IRC operator
	;Password = ThePwd

	# Optional Mask from which /OPER will be accepted
	;Mask = *!ident@somewhere.example.com
